<?php
/**
 * This source file is available under  GNU General Public License version 3 (GPLv3)
 *
 * Full copyright and license information is available in LICENSE.md which is distributed with this source code.
 *
 *  @copyright  Copyright (c) Asioso GmbH (https://www.asioso.com)
 *
 */

namespace DooFinderBundle\Adapter;

use Symfony\Component\Intl\Exception\NotImplementedException;

/**
 * Trait DooFinderSearchableItemTrait
 * @package DooFinderBundle\Adapter
 */
trait DooFinderSearchableItemTrait
{


    /**
     * Manual search boost for the item.
     * @var
     */
    protected $dfManualBoost = null;

    /**
     * Searchable, not shown text associated with the item.
     * @var
     */
    protected $dfIndexedText = null;

    /**
     * This is a read-only attribute generated by the server. It's the location you can get the item details at. It's only for information purposes.
     * @var
     */
    protected $dfUrl = null;


    /**
     * @return mixed
     */
    public function getDfManualBoost()
    {
        return $this->dfManualBoost;
    }

    /**
     * @param mixed $dfManualBoost
     */
    public function setDfManualBoost($dfManualBoost)
    {
        $this->dfManualBoost = $dfManualBoost;
    }

    /**
     * @return mixed
     */
    public function getDfIndexedText()
    {
        return $this->dfIndexedText;
    }

    /**
     * @param mixed $dfIndexedText
     */
    public function setDfIndexedText($dfIndexedText)
    {
        $this->dfIndexedText = $dfIndexedText;
    }

    /**
     * @return mixed
     */
    public function getDfUrl()
    {
        return $this->dfUrl;
    }

    /**
     * @param mixed $dfUrl
     */
    public function setDfUrl($dfUrl)
    {
        $this->dfUrl = $dfUrl;
    }

    /**
     * @param null $options
     * @return string|null
     */
    public static function getActiveConditionForDataFeed($options = null)
    {
        throw new NotImplementedException("getActiveConditionForDataFeed needs to implemented in the child class");
    }
}